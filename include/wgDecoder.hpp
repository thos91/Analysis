#ifndef WGDECODER_HPP_
#define WGDECODER_HPP_

// system includes
#include <bitset>

// user includes
#include "wgConst.hpp"

#define NUM_SECTION_TYPES 7

#define BITS_PER_LINE  16
#define BYTES_PER_LINE 2

// Error codes
const unsigned DE_SUCCESS                       = 0;
const unsigned ERR_CANNOT_CREATE_DIRECTORY      = 1;
const unsigned ERR_CANNOT_OVERWRITE_OUTPUT_FILE = 2;
const unsigned ERR_WRONG_DIF_VALUE              = 3;
const unsigned ERR_FAILED_OPEN_RAW_FILE         = 4;
const unsigned ERR_INPUT_FILE_NOT_FOUND         = 5;
const unsigned ERR_READING_RAW_FILE             = 6;

// Headers and trailers markers
const std::bitset<BITS_PER_LINE> FIRST_MARKER         (0xFFFA);
const std::bitset<BITS_PER_LINE> SPILL_NUMBER_MARKER  (0xFFFB);
const std::bitset<BITS_PER_LINE> SPILL_HEADER_MARKER  (0xFFFC);
const std::bitset<BITS_PER_LINE> CHIP_HEADER_MARKER   (0xFFFD);
const std::bitset<BITS_PER_LINE> CHIP_TRAILER_MARKER  (0xFFFE);
const std::bitset<BITS_PER_LINE> SPILL_TRAILER_MARKER (0xFFFF);
const std::bitset<BITS_PER_LINE> SPACE_MARKER         (0x2020);
const std::bitset<BITS_PER_LINE> SP_MARKER            (0x5053);
const std::bitset<BITS_PER_LINE> IL_MARKER            (0x4C49);
const std::bitset<BITS_PER_LINE> CH_MARKER            (0x4843);
const std::bitset<BITS_PER_LINE> IP_MARKER            (0x5049);

// Bitset masks
const std::bitset<BITS_PER_LINE> x000F                (0x00FF);
const std::bitset<BITS_PER_LINE> x00FF                (0x00FF);
const std::bitset<BITS_PER_LINE> x0FFF                (0x0FFF);
const std::bitset<BITS_PER_LINE> xFFF0                (0x0FFF);
const std::bitset<BITS_PER_LINE> xFF00                (0xFF00);
const std::bitset<BITS_PER_LINE> xF000                (0xF000);
const std::bitset<BITS_PER_LINE> x0000                (0x0000);

// The extern "C" is needed to call the wgDecoder from Python using
// ctypes.
#ifdef __cplusplus
extern "C" {
#endif

  // For an in-depth explanation about the arguments refer to
  // the autogenerated sphinx documentation.

  int wgDecoder(const char * x_input_raw_file,
                const char * x_calibration_dir,
                const char * x_output_dir,
                bool overwrite = false,
                bool compatibility_mode = false,
                unsigned dif = 1,
                unsigned n_chips = 0);
  
#ifdef __cplusplus
}
#endif

#endif /* WGDECODER_HPP_ */
